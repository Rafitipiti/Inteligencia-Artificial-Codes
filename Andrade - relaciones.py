# -*- coding: utf-8 -*-
"""Relaciones.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WhEVfpjuHL29YkK8fUS6RE12JqU5dpx_
"""

!pip install kanren
from kanren import *

hijo = Relation()
esposo = Relation()

"""### Base de conocimiento"""

facts(
  esposo, 
    ("Sabino", "Rosalia"),
    ("David","Flor"),
    ("Rene","Nelid")
)
facts(
    hijo,
      ("David", "Sabino"),
      ("Rene","Sabino"),
      ("Hernan", "Sabino"),
      ("Angie","David"),
      ("Marcelo", "Rene")
      )

"""### Motor de Inferencia"""

def hermano(x,z):
  y = var()
  return conde((hijo(x,y),hijo(z,y))) # COMO TIENEN AL MISMO Y (PADRE) SON HERMANOS

def esposa(x,z):
  y = var()
  return conde((hijo(y,x),esposo(x,z)))

def mama(x,z):
  y = var()
  return conde((hijo(x,y),esposo(y,z)))

def padre(x,z):
  y = var()
  return conde((hijo(x,z),esposo(z,y)))

def descendencia(x,z):
  y = var()
  return conde((hijo(z,x),esposo(x,y)))

H1,H2 = vars(2)

# Modelo matem√°tico

# Vx, Ey hermano(x,y)
print("...................")
print("Regla de inferencia para todo hijo puede tener un hermano o hermanos:", [(x,y) for x,y in run(0,(H1,H2),(hermano(H1,H2))) if x != y])

# Vx, Ey esposa(x,y)
print("...................")
print("Regla de inferencia para todo esposo tiene una esposa:", [(x,y) for x,y in run(0,(H1,H2),(esposa(H1,H2))) if x != y])

# Vx, Ey madre(x,y)
print("...................")
print("Regla de inferencia para todo hijo existe una madre:",[(x,y) for x,y in run(0,(H1,H2),(mama(H1,H2))) if x != y])

# Vx, Ey padre(x,y)
print("...................")
print("Regla de inferencia para todo hijo existe un padre:",[(x,y) for x,y in run(0,(H1,H2),(padre(H1,H2))) if x != y])

# Vx, Ey hijo(x,y)
print("...................")
print("Regla de inferencia para todo padre tiene descendientes:",[(x,y) for x,y in run(0,(H1,H2),(descendencia(H1,H2))) if x != y])